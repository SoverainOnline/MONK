name: Build and Extract Files from Docker Container

on:
  push:
    branches:
      - master

jobs:
  build-files-linux-x64:
    runs-on: ubuntu-22.04
    if: ${{ false }}  # Set condition to false to make the workflow inactive

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Extract Files from Docker Container
        run: |
          # Build the Docker image from the Dockerfile in the repository
          docker build \
            --build-arg CPU_CORES=$(nproc) \
            --build-arg TICKER=MONK \
            --build-arg NAME=Monk \
            --build-arg BASE_NAME=monk \
            --build-arg TARGET=master \
            -t monk-linux-x64-build \
            -f contrib/docker/Dockerfile.dsw-linux-x64-wallet .

          # Start the container (if it's not already running)
          docker run -d --name monk-linux-x64-build-container monk-linux-x64-build

          # Create a temporary directory to hold the extracted files
          mkdir release_files

          # Copy files from the Docker container to the local filesystem
          docker cp monk-linux-x64-build-container:/MONK/deploy/linux-x64 release_files/

      - name: Archive and Upload Extracted Files
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: release_files
  build-files-linux-arm64:
    runs-on: ubuntu-22.04
    if: ${{ false }}  # Set condition to false to make the workflow inactive

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Extract Files from Docker Container
        run: |
          # Build the Docker image from the Dockerfile in the repository
          docker build \
            --build-arg CPU_CORES=$(nproc) \
            --build-arg TICKER=MONK \
            --build-arg NAME=Monk \
            --build-arg BASE_NAME=monk \
            --build-arg TARGET=master \
            -t monk-linux-arm64-build \
            -f contrib/docker/Dockerfile.dsw-linux-arm64-wallet .

          # Start the container (if it's not already running)
          docker run -d --name monk-linux-arm64-build-container monk-linux-arm64-build

          # Create a temporary directory to hold the extracted files
          mkdir release_files

          # Copy files from the Docker container to the local filesystem
          docker cp monk-linux-arm64-build-container:/MONK/deploy/linux-arm64 release_files/

      - name: Archive and Upload Extracted Files
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: release_files
  build-windows-x64:
    runs-on: ubuntu-22.04
    if: ${{ false }}  # Set condition to false to make the workflow inactive

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Extract Files from Docker Container
        run: |
          # Build the Docker image from the Dockerfile in the repository
          docker build \
            --build-arg CPU_CORES=$(nproc) \
            --build-arg TICKER=MONK \
            --build-arg NAME=Monk \
            --build-arg BASE_NAME=monk \
            --build-arg TARGET=master \
            -t monk-windows-x64-build \
            -f contrib/docker/Dockerfile.dsw-windows-x64-wallet .

          # Start the container (if it's not already running)
          docker run -d --name monk-windows-x64-build-container monk-windows-x64-build

          # Create a temporary directory to hold the extracted files
          mkdir release_files

          # Copy files from the Docker container to the local filesystem
          docker cp monk-windows-x64-build-container:/MONK/deploy/windows-x64 release_files/

      - name: Archive and Upload Extracted Files
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: release_files
  build-macos-x64:
    runs-on: ubuntu-22.04
    if: ${{ false }}  # Set condition to false to make the workflow inactive

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Extract Files from Docker Container
        run: |
          # Build the Docker image from the Dockerfile in the repository
          docker build \
            --build-arg CPU_CORES=$(nproc) \
            --build-arg TICKER=MONK \
            --build-arg NAME=Monk \
            --build-arg BASE_NAME=monk \
            --build-arg TARGET=master \
            -t monk-macos-x64-build \
            -f contrib/docker/Dockerfile.dsw-macos-x64-wallet .

          # Start the container (if it's not already running)
          docker run -d --name monk-macos-x64-build-container monk-macos-x64-build

          # Create a temporary directory to hold the extracted files
          mkdir release_files

          # Copy files from the Docker container to the local filesystem
          docker cp monk-macos-x64-build-container:/MONK/deploy/macos-x64 release_files/

      - name: Archive and Upload Extracted Files
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: release_files
